package com.newshunt.newshunt.adapter;

import com.newshunt.newshunt.R;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;

public class TimeLineAdapter extends BaseAdapter {
	Context context;

	public TimeLineAdapter(Context context) {
		super();
		this.context = context;
	}

	@Override
	public int getCount() {
		// TODO Auto-generated method stub
		return 10;
	}

	@Override
	public Object getItem(int position) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public long getItemId(int position) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		// TODO Auto-generated method stub
		if (convertView == null) {
			LayoutInflater inflater = (LayoutInflater) context
					.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
			convertView = inflater.inflate(R.layout.timeline, parent, false);
		} else {

		}
		FrameLayout frameLayout = (FrameLayout) convertView
				.findViewById(R.id.timeline);
		frameLayout.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				System.out.println("Clicked");
				int position = ((ListView) (((View) v.getParent()).getParent()))
						.getPositionForView((View) v.getParent());
				System.out.println(position);
				View view = (View) v.getParent();
				TextView textView = (TextView) view.findViewById(R.id.headline);
				LinearLayout layout = (LinearLayout) view
						.findViewById(R.id.dateLayout);
				LinearLayout goneLayout = (LinearLayout) view
						.findViewById(R.id.goneLayout);
				if (layout.getVisibility() == View.VISIBLE) {
					layout.setVisibility(View.GONE);
					textView.setVisibility(View.GONE);
					goneLayout.setVisibility(View.VISIBLE);
				} else {
					layout.setVisibility(View.VISIBLE);
					textView.setVisibility(View.VISIBLE);
					goneLayout.setVisibility(View.GONE);
				}
			}
		});

		LinearLayout layout = (LinearLayout) convertView
				.findViewById(R.id.dateLayout);
		layout.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				System.out.println("Clicked");
				int position = ((ListView) (((View) v.getParent()).getParent()))
						.getPositionForView((View) v.getParent());
				System.out.println(position);
				View view = (View) v.getParent();
				TextView textView = (TextView) view.findViewById(R.id.headline);
				LinearLayout layout = (LinearLayout) view
						.findViewById(R.id.dateLayout);
				LinearLayout goneLayout = (LinearLayout) view
						.findViewById(R.id.goneLayout);
				if (layout.getVisibility() == View.VISIBLE) {
					layout.setVisibility(View.GONE);
					textView.setVisibility(View.GONE);
					goneLayout.setVisibility(View.VISIBLE);
				} else {
					layout.setVisibility(View.VISIBLE);
					textView.setVisibility(View.VISIBLE);
					goneLayout.setVisibility(View.GONE);
				}
			}
		});
		
		LinearLayout layoutGone = (LinearLayout) convertView
				.findViewById(R.id.goneLayout);
		layoutGone.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				System.out.println("Clicked");
				int position = ((ListView) (((View) v.getParent()).getParent()))
						.getPositionForView((View) v.getParent());
				System.out.println(position);
				View view = (View) v.getParent();
				TextView textView = (TextView) view.findViewById(R.id.headline);
				LinearLayout layout = (LinearLayout) view
						.findViewById(R.id.dateLayout);
				LinearLayout goneLayout = (LinearLayout) view
						.findViewById(R.id.goneLayout);
				if (layout.getVisibility() == View.VISIBLE) {
					layout.setVisibility(View.GONE);
					textView.setVisibility(View.GONE);
					goneLayout.setVisibility(View.VISIBLE);
				} else {
					layout.setVisibility(View.VISIBLE);
					textView.setVisibility(View.VISIBLE);
					goneLayout.setVisibility(View.GONE);
				}
			}
		});
		return convertView;
	}
}
